# # This is a basic workflow to help you get started with Actions

# name: Lab6 CI/CD

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   test:
#     runs-on: window-latest
#     steps:
#       - name: Check out repository code
#       - uses: actions/checkout@v3

#       - name: Check out unittest
#         run: python Unittest_Lab6.py
        
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: window-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2
#       # Runs a single command using the runners shell
#       - name: compile to bytecode
#         run: python -m py_compile calc.py > calc.pyc
#       - name: setup compiler
#         run: pip install pyinstaller
#       - name: compile to package
#         run: pyinstaller calc.py  --noconfirm --onefile --console
#       - name: setup git config
#         run: |
#           git config user.name "Hang Ly"
#           git config user.email "hanglyu2002@gmail.com" 
#     # commit files
#       - name: Commit files
#         run: |
#             git commit -a -m 'Changes pushed by GitHub Actions' || true
#             git push origin master

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pyinstaller 
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest Test.py
    
    - name: Create an .exe file
      run: |
        pyinstaller --onefile main.py
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: exe
        path: ./
